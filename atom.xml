<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>JLY</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2024-10-31T09:23:42.744Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>Jly</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>238.除自身以外数组的乘积</title>
    <link href="http://example.com/2024/10/31/238-%E9%99%A4%E8%87%AA%E8%BA%AB%E4%BB%A5%E5%A4%96%E6%95%B0%E7%BB%84%E7%9A%84%E4%B9%98%E7%A7%AF/"/>
    <id>http://example.com/2024/10/31/238-%E9%99%A4%E8%87%AA%E8%BA%AB%E4%BB%A5%E5%A4%96%E6%95%B0%E7%BB%84%E7%9A%84%E4%B9%98%E7%A7%AF/</id>
    <published>2024-10-31T09:06:40.000Z</published>
    <updated>2024-10-31T09:23:42.744Z</updated>
    
    <content type="html"><![CDATA[<h2 id="238-除自身以外数组的乘积"><a href="#238-除自身以外数组的乘积" class="headerlink" title="238.除自身以外数组的乘积"></a>238.除自身以外数组的乘积</h2><p>给你一个整数数组 <code>nums</code>，返回 数组 <code>answer</code> ，其中 <code>answer[i]</code> 等于 <code>nums</code> 中除 <code>nums[i]</code> 之外其余各元素的乘积 。</p><p>题目数据 <strong>保证</strong> 数组 <code>nums</code>之中任意元素的全部前缀元素和后缀的乘积都在  <strong>32 位</strong> 整数范围内。</p><p>请 <strong>不要使用除法，</strong>且在 <code>O(n)</code> 时间复杂度内完成此题。</p><p><strong>示例 1:</strong></p><p><strong>输入:</strong> nums &#x3D; <code>[1,2,3,4]</code><br><strong>输出:</strong> <code>[24,12,8,6]</code></p><p><strong>示例 2:</strong></p><p><strong>输入:</strong> nums &#x3D; [-1,1,0,-3,3]<br><strong>输出:</strong> [0,0,9,0,0]</p><p><strong>提示：</strong></p><ul><li><code>2 &lt;= nums.length &lt;= 105</code></li><li><code>-30 &lt;= nums[i] &lt;= 30</code></li><li><strong>保证</strong> 数组 <code>nums</code>之中任意元素的全部前缀元素和后缀的乘积都在  <strong>32 位</strong> 整数范围内</li></ul><hr><p>自己写的：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">productExceptSelf</span>(<span class="params">self, nums: <span class="type">List</span>[<span class="built_in">int</span>]</span>) -&gt; <span class="type">List</span>[<span class="built_in">int</span>]:</span><br><span class="line">        numbers = <span class="built_in">len</span>(nums)</span><br><span class="line">        a = []</span><br><span class="line">        b=<span class="number">1</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, numbers):</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,numbers):</span><br><span class="line">                <span class="keyword">if</span> i != j:</span><br><span class="line">                    b = b*nums[j]</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    b=b</span><br><span class="line">            a.append(b)</span><br><span class="line">            b=<span class="number">1</span></span><br><span class="line">        <span class="keyword">return</span> a</span><br></pre></td></tr></table></figure><p>看题解的：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">productExceptSelf</span>(<span class="params">self, nums: <span class="type">List</span>[<span class="built_in">int</span>]</span>) -&gt; <span class="type">List</span>[<span class="built_in">int</span>]:</span><br><span class="line">        ans, tmp = [<span class="number">1</span>] * <span class="built_in">len</span>(nums), <span class="number">1</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, le(nums)):</span><br><span class="line">            ans[i] = ans[i - <span class="number">1</span>] * nums[i - <span class="number">1</span>] <span class="comment"># 下三角</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(nums) - <span class="number">2</span>, -<span class="number">1</span>, -<span class="number">1</span>):</span><br><span class="line">            tmp *= nums[i + <span class="number">1</span>]                <span class="comment"># 上三角</span></span><br><span class="line">            ans[i] *= tmp                     <span class="comment"># 下三角 * 上三角</span></span><br><span class="line">        <span class="keyword">return</span> ans</span><br></pre></td></tr></table></figure><p><img src="C:\Users\0.0\AppData\Roaming\marktext\images\2024-10-31-17-22-23-image.png"></p><p>自己写的时间复杂度是O(n2)，没有达到题目要求，题解的可以</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;238-除自身以外数组的乘积&quot;&gt;&lt;a href=&quot;#238-除自身以外数组的乘积&quot; class=&quot;headerlink&quot; title=&quot;238.除自身以外数组的乘积&quot;&gt;&lt;/a&gt;238.除自身以外数组的乘积&lt;/h2&gt;&lt;p&gt;给你一个整数数组 &lt;code&gt;nums&lt;/c</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>485.最大连续1的个数</title>
    <link href="http://example.com/2024/10/31/485.%E6%9C%80%E5%A4%A7%E8%BF%9E%E7%BB%AD1%E7%9A%84%E4%B8%AA%E6%95%B0/"/>
    <id>http://example.com/2024/10/31/485.%E6%9C%80%E5%A4%A7%E8%BF%9E%E7%BB%AD1%E7%9A%84%E4%B8%AA%E6%95%B0/</id>
    <published>2024-10-31T08:47:32.000Z</published>
    <updated>2024-10-31T09:23:42.744Z</updated>
    
    <content type="html"><![CDATA[<h2 id="485-最大连续1的个数"><a href="#485-最大连续1的个数" class="headerlink" title="485.最大连续1的个数"></a>485.最大连续1的个数</h2><p>给定一个二进制数组 <code>nums</code> ， 计算其中最大连续 <code>1</code> 的个数。</p><p><strong>示例 1：</strong></p><p><strong>输入：</strong>nums &#x3D; [1,1,0,1,1,1]<br><strong>输出：</strong>3<br><strong>解释：</strong>开头的两位和最后的三位都是连续 1 ，所以最大连续 1 的个数是 3.</p><p><strong>示例 2:</strong></p><p><strong>输入：</strong>nums &#x3D; [1,0,1,1,0,1]<br><strong>输出：</strong>2</p><p><strong>提示：</strong></p><ul><li><code>1 &lt;= nums.length &lt;= 105</code></li><li><code>nums[i]</code> 不是 <code>0</code> 就是 <code>1</code>.</li></ul><hr><p>自己写的：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">findMaxConsecutiveOnes</span>(<span class="params">self, nums: <span class="type">List</span>[<span class="built_in">int</span>]</span>) -&gt; <span class="built_in">int</span>:</span><br><span class="line">     count = <span class="number">0</span></span><br><span class="line">     flag = <span class="number">0</span></span><br><span class="line">     numbers = <span class="built_in">len</span>(nums)</span><br><span class="line">     <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,numbers):</span><br><span class="line">         <span class="keyword">if</span> nums[i] == <span class="number">1</span>:</span><br><span class="line">             count += <span class="number">1</span></span><br><span class="line">         <span class="keyword">else</span>:</span><br><span class="line">             <span class="keyword">if</span> flag &lt; count:</span><br><span class="line">                 flag = count</span><br><span class="line">         count = <span class="number">0</span></span><br><span class="line">     <span class="keyword">if</span> flag &lt; count:</span><br><span class="line">         flag = count</span><br><span class="line">     <span class="keyword">return</span> flag</span><br></pre></td></tr></table></figure><p>优化的：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">findMaxConsecutiveOnes</span>(<span class="params">self, nums: <span class="type">List</span>[<span class="built_in">int</span>]</span>) -&gt; <span class="built_in">int</span>:</span><br><span class="line">        count = <span class="number">0</span></span><br><span class="line">        maxcount = <span class="number">0</span></span><br><span class="line">        numbers = <span class="built_in">len</span>(nums)</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,numbers):</span><br><span class="line">            <span class="keyword">if</span> nums[i] == <span class="number">1</span>:</span><br><span class="line">                count += <span class="number">1</span></span><br><span class="line">                maxcount  = <span class="built_in">max</span>(maxcount,count)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                count = <span class="number">0</span></span><br><span class="line">        <span class="keyword">return</span> maxcount</span><br></pre></td></tr></table></figure><p>优化的看着更为清晰也更好理解，时间复杂度同样是O(n)，但是自己写的会更快一些，因为不用每个都判断一下maxcount。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;485-最大连续1的个数&quot;&gt;&lt;a href=&quot;#485-最大连续1的个数&quot; class=&quot;headerlink&quot; title=&quot;485.最大连续1的个数&quot;&gt;&lt;/a&gt;485.最大连续1的个数&lt;/h2&gt;&lt;p&gt;给定一个二进制数组 &lt;code&gt;nums&lt;/code&gt; ， </summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>python学习</title>
    <link href="http://example.com/2024/09/27/python%E5%AD%A6%E4%B9%A0/"/>
    <id>http://example.com/2024/09/27/python%E5%AD%A6%E4%B9%A0/</id>
    <published>2024-09-27T01:31:51.000Z</published>
    <updated>2024-10-27T11:09:16.782Z</updated>
    
    <content type="html"><![CDATA[<h1 id="python编程从入门到实践（第二版）整理"><a href="#python编程从入门到实践（第二版）整理" class="headerlink" title="python编程从入门到实践（第二版）整理"></a>python编程从入门到实践（第二版）整理</h1><h2 id="第二章"><a href="#第二章" class="headerlink" title="第二章"></a>第二章</h2><p>1.变量名只能包含字母、数字、下划线，且不能以数字打头。不能包含空格，不能使用关键字或函数名用作变量名。推荐使用小写变量名，慎用o和l</p><p>2.title()：以首字母大写的方式显示单词</p><p>upper()：字符串改为全部大写</p><p>lower()：字符串改为全部小写</p><p>f”{} {}”：表示拼凑两个变量</p><p>3.\t：缩进</p><p>\n：换行</p><p>4.strip()：删除空白，但删除是暂时的，下一次访问依旧存在，要想永久删除，就要关联到变量。</p><p>lstrip()：删除左边空白</p><p>rstrip()：删除右边空白</p><p>5.使用字符串时记得注意语句中的’，要注意对应问题</p><p>6.在python运算中，任意两个数相除，结果均为浮点数，eg.4&#x2F;2&#x3D;2.0</p><p>7.书写很大的数时可以用下划线进行数字分组，如表示140亿时，money &#x3D; 14_000_000_000</p><p>8.同时给多个变量赋值，需要用，进行隔开，如x,y,z&#x3D; 0，0，0</p><p>9.通常使用全部大写来表示常量，如MAX&#x3D;5000</p><p>10.注释用#，pycharm中，选中 ctrl+&#x2F;可以批量注释</p><h2 id="第三章"><a href="#第三章" class="headerlink" title="第三章"></a>第三章</h2><p>1.[“”,””]表示列表。列表索引从0开始不是1，-1表示列表倒着数第一个。</p><p>2.append()：给列表附加元素，添加到末尾</p><p>insert()：插入元素。列表名.insert(位置，‘元素’)</p><p>del删除元素：del 列表名[位置]</p><p>pop()：删除元素，删除后元素不在列表中，用于知道元素位置时。</p><p>remove()：删除元素，用于知道元素的值，但不知道元素的位置时。</p><p>3.sort()：列表永久修改排序，若列表名.sort(reverse&#x3D;True)，则为倒序。</p><p>sorted()：修改是暂时的，其他同上。</p><p>reverse()：倒着打印列表，修改时永久的，但是想要恢复只需要再次调用reverse()</p><p>len()：确定列表长度</p><h2 id="第四章"><a href="#第四章" class="headerlink" title="第四章"></a>第四章</h2><p>1.遍历for i in 列表：</p><p>2.一定要关注缩进问题！！！不要漏了冒号！！！</p><p>3.range():遍历指定数，但是需要注意的时，range(1,5)只打印1-4，要指定步长就是range(1,5,2)</p><p>4.**表示乘方运算</p><p>5.min()：最小值</p><p>max()：最大值</p><p>sum()：总和</p><p>6.列表解析：将for循环和创建新元素的代码合并成一行，并自动附加新元素。</p><p>eg: squares &#x3D; [value**2 for value in range(1,11)]</p><p>print(squares)</p><p>[1,4,9,16,25,36,49,64,81,100]</p><p>7.切片：列表名[起始索引,终止索引]</p><p>8.复制列表：a&#x3D;b[:]</p><p>9.元组是用中括号表示，不是方括号，如people &#x3D; (“jly”,”zry”)，元组的值不能修改，如果要修改，只能定义一个新的元组。</p><p>10.如果要定义一个只有一个值的元组，需要number &#x3D; (3,)</p><p>11.专家建议每行不要超过80个字符。</p><h2 id="第五章"><a href="#第五章" class="headerlink" title="第五章"></a>第五章</h2><p>没啥注意点</p><h2 id="第六章"><a href="#第六章" class="headerlink" title="第六章"></a>第六章</h2><p>1.字典是键值对，每一个键都与一个值相关联。</p><p>2.字典中元素的排列顺序与定义时相同。</p><p>3.删除键值对只需要 delete xxx[‘xxx’]，就可以删除xxx及其值</p><p>4.用get()访问字典中的值，只需要字典名.get(’键值‘)，如果加上第二个参数字典名.get(’键值‘,’No point value assigned’)，在没有指定的这个键值时会返回这句话，不会报错，常用于不确定键值存不存在时用，如果不指定第二个参数，就会返回None，也是差不多的。</p><p>5.剔除重复项可以使用set（集合），用法就是for a in set(字典名.values())</p><p>remember:花括号内没有键值对就是集合，有键值对就是字典，方括号是列表</p><h2 id="第七章"><a href="#第七章" class="headerlink" title="第七章"></a>第七章</h2><p>1.变量名&#x3D;input(“xxx”)</p><p>2.break结束循环，continue忽略余下代码继续循环</p><p>3.填充字典：字典名[键]&#x3D;键值</p><h2 id="第八章"><a href="#第八章" class="headerlink" title="第八章"></a>第八章</h2><ol><li></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;python编程从入门到实践（第二版）整理&quot;&gt;&lt;a href=&quot;#python编程从入门到实践（第二版）整理&quot; class=&quot;headerlink&quot; title=&quot;python编程从入门到实践（第二版）整理&quot;&gt;&lt;/a&gt;python编程从入门到实践（第二版）整理&lt;/</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>网页学习（一）.md</title>
    <link href="http://example.com/2024/09/12/%E7%BD%91%E9%A1%B5%E5%AD%A6%E4%B9%A0%EF%BC%88%E4%B8%80%EF%BC%89/"/>
    <id>http://example.com/2024/09/12/%E7%BD%91%E9%A1%B5%E5%AD%A6%E4%B9%A0%EF%BC%88%E4%B8%80%EF%BC%89/</id>
    <published>2024-09-12T08:57:28.000Z</published>
    <updated>2024-09-12T10:03:20.504Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-概念"><a href="#1-概念" class="headerlink" title="1.概念"></a>1.概念</h1><p>html是超文本标记语言（Hyper Text Markup Language）</p><h1 id="2-常用浏览器"><a href="#2-常用浏览器" class="headerlink" title="2.常用浏览器"></a>2.常用浏览器</h1><p>浏览器内核（渲染引擎）：负责读取网页内容，整理讯息，计算网页的显示方式并显示页面。</p><table><thead><tr><th>浏览器</th><th>内核</th><th>备注</th></tr></thead><tbody><tr><td>IE</td><td>Trident</td><td></td></tr><tr><td>firefox</td><td>Gecko</td><td></td></tr><tr><td>Safari</td><td>Webkit</td><td></td></tr><tr><td>chrome</td><td>Blink</td><td>Blink是Webkit的分支</td></tr><tr><td>Opera</td><td>Blink</td><td>最初是自己的Presto内核，后来是Webkit，现在是Blink</td></tr><tr><td>360、猎豹</td><td>Trident+Blink</td><td>IE+Chrome的双内核</td></tr><tr><td>搜狗、遨游、QQ</td><td>Trident+Webkit</td><td>Trident兼容模式，Webkit高速模式</td></tr><tr><td>百度浏览器</td><td>Trident</td><td></td></tr><tr><td>2345浏览器</td><td>Trident</td><td>最初是IE内核，现在也是IE+Chrome双内核</td></tr></tbody></table><p>不同的内核对于网页编写的语法解释也有不同，进而导致同一个页面在不同内核的浏览器下显示出的效果也会有出入，所以需要考虑内核和各种兼容性问题。</p><p>世界上第一款Java</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;1-概念&quot;&gt;&lt;a href=&quot;#1-概念&quot; class=&quot;headerlink&quot; title=&quot;1.概念&quot;&gt;&lt;/a&gt;1.概念&lt;/h1&gt;&lt;p&gt;html是超文本标记语言（Hyper Text Markup Language）&lt;/p&gt;
&lt;h1 id=&quot;2-常用浏览器&quot;&gt;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>轮转数组</title>
    <link href="http://example.com/2024/06/13/%E8%BD%AE%E8%BD%AC%E6%95%B0%E7%BB%84/"/>
    <id>http://example.com/2024/06/13/%E8%BD%AE%E8%BD%AC%E6%95%B0%E7%BB%84/</id>
    <published>2024-06-13T08:52:24.000Z</published>
    <updated>2024-06-13T11:34:28.928Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Leetcode刷题1-轮转数组"><a href="#Leetcode刷题1-轮转数组" class="headerlink" title="Leetcode刷题1-轮转数组"></a>Leetcode刷题1-轮转数组</h1><h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p>给定一个整数数组 <code>nums</code>，将数组中的元素向右轮转 <code>k</code> 个位置，其中 <code>k</code> 是非负数。</p><h4 id="示例1："><a href="#示例1：" class="headerlink" title="示例1："></a>示例1：</h4><p><strong>输入:</strong> nums &#x3D; [1,2,3,4,5,6,7], k &#x3D; 3<br><strong>输出:</strong> <code>[5,6,7,1,2,3,4]</code><br><strong>解释:</strong><br>向右轮转 1 步: <code>[7,1,2,3,4,5,6]</code><br>向右轮转 2 步: <code>[6,7,1,2,3,4,5]</code><br>向右轮转 3 步: <code>[5,6,7,1,2,3,4]</code></p><h4 id="示例2："><a href="#示例2：" class="headerlink" title="示例2："></a>示例2：</h4><p>输入：<strong>nums &#x3D; [-1,-100,3,99], k &#x3D; 2<br>输出：</strong>[3,99,-1,-100]<br><strong>解释:</strong><br>向右轮转 1 步: [99,-1,-100,3]<br>向右轮转 2 步: [3,99,-1,-100]</p><h4 id="提示："><a href="#提示：" class="headerlink" title="提示："></a>提示：</h4><ul><li><code>1 &lt;= nums.length &lt;= 105</code></li><li><code>-231 &lt;= nums[i] &lt;= 231 - 1</code></li><li><code>0 &lt;= k &lt;= 105</code></li></ul><h3 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h3><h4 id="1-调换顺序，然后中间截断，最后再次调换顺序"><a href="#1-调换顺序，然后中间截断，最后再次调换顺序" class="headerlink" title="1.调换顺序，然后中间截断，最后再次调换顺序"></a>1.调换顺序，然后中间截断，最后再次调换顺序</h4><p>class Solution:</p><p>    def rotate(self, nums: List[int], k: int) -&gt; None:  </p><p>        k %&#x3D; len(nums)  </p><p>        nums.reverse()  # 反转整个列表  </p><p>        nums[:k] &#x3D; reversed(nums[:k])  # 反转前k个元素  </p><p>        nums[k:] &#x3D; reversed(nums[k:])  # 反转后len(nums)-k个元素</p><h4 id="2"><a href="#2" class="headerlink" title="2."></a>2.</h4><h4 id="3-调换顺序，然后中间截断，最后再次调换顺序"><a href="#3-调换顺序，然后中间截断，最后再次调换顺序" class="headerlink" title="3.调换顺序，然后中间截断，最后再次调换顺序"></a>3.调换顺序，然后中间截断，最后再次调换顺序</h4><p>class Solution:</p><p>    def rotate(self, nums: List[int], k: int) -&gt; None:  </p><p>        k %&#x3D; len(nums)  </p><p>        nums.reverse()  # 反转整个列表  </p><p>        nums[:k] &#x3D; reversed(nums[:k])  # 反转前k个元素  </p><p>        nums[k:] &#x3D; reversed(nums[k:])  # 反转后len(nums)-k个元素</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Leetcode刷题1-轮转数组&quot;&gt;&lt;a href=&quot;#Leetcode刷题1-轮转数组&quot; class=&quot;headerlink&quot; title=&quot;Leetcode刷题1-轮转数组&quot;&gt;&lt;/a&gt;Leetcode刷题1-轮转数组&lt;/h1&gt;&lt;h2 id=&quot;题目&quot;&gt;&lt;a hr</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>MarkText常用快捷键</title>
    <link href="http://example.com/2024/03/25/MarkText%E5%B8%B8%E7%94%A8%E5%BF%AB%E6%8D%B7%E9%94%AE/"/>
    <id>http://example.com/2024/03/25/MarkText%E5%B8%B8%E7%94%A8%E5%BF%AB%E6%8D%B7%E9%94%AE/</id>
    <published>2024-03-25T03:08:41.000Z</published>
    <updated>2024-03-25T03:13:29.070Z</updated>
    
    <content type="html"><![CDATA[<p>参考：<a href="https://markdown.com.cn/basic-syntax/headings.html">Markdown 标题语法 | Markdown 官方教程</a></p><h2 id="1-标题"><a href="#1-标题" class="headerlink" title="1.标题"></a>1.标题</h2><p>输入#＋空格，表示一级标题，输入n个#+空格表示n级标题。</p><p>不能输入#+enter，不然就会空出一行大标题</p><h2 id="2-字体"><a href="#2-字体" class="headerlink" title="2.字体"></a>2.字体</h2><p>输入ctrl+B是加粗 <strong>加粗</strong></p><p>输入ctrl+I是斜体 <em>斜体</em></p><p>输入ctrl+D是删除线 <del>删除线</del></p><p>输入ctrl+shift+H是高亮 高亮</p><h2 id="3-引用"><a href="#3-引用" class="headerlink" title="3.引用"></a>3.引用</h2><p>输入ctrl+alt+Q是引用 but我莫名打开了啥快速助手，我也不知道</p><h2 id="4-插入图片"><a href="#4-插入图片" class="headerlink" title="4.插入图片"></a>4.插入图片</h2><p>输入ctrl+alt+l是导入图片，得写上地址 <a href="https://cn.bing.com/images/search?view=detailV2&ccid=nVJaWCMM&id=5D45F2C4B14B6986A3FE559461C1545074D465D0&thid=OIP.nVJaWCMMQjo-F6Mlyl2htQHaNK&mediaurl=https://pic2.zhimg.com/50/v2-6facaf72983471b203f4daf7771a1ef3_720w.jpg?source=1940ef5c&exph=1280&expw=720&q=%E5%BC%A0%E8%8B%A5%E6%98%80&simid=607988948301017587&FORM=IRPRST&ck=AD2B449EF96B9FBC37510FA8386CFFF7&selectedIndex=1&itb=0&ajaxhist=0&ajaxserp=0">张若昀</a></p><h2 id="5-超链接"><a href="#5-超链接" class="headerlink" title="5.超链接"></a>5.超链接</h2><p>输入ctrl+l是实现超链接</p><p><a href="https://blog.csdn.net/weixin_51043896/article/details/122482224">MarkText常用快捷键_marktext快捷键-CSDN博客</a></p><h2 id="6-列表"><a href="#6-列表" class="headerlink" title="6.列表"></a>6.列表</h2><p>输入序号1+.+空格或者ctrl+G，即为列表</p><ol><li><p>jly真聪明</p></li><li><p>jly宇宙第一帅</p></li></ol><h2 id="7-表格"><a href="#7-表格" class="headerlink" title="7.表格"></a>7.表格</h2><p>输入ctrl+shift+t是输入表格，然后选择几行几列。</p><table><thead><tr><th></th><th></th><th></th></tr></thead><tbody><tr><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td></tr></tbody></table><h2 id="8-代码"><a href="#8-代码" class="headerlink" title="8.代码"></a>8.代码</h2><p>输入&#96;&#96;&#96;，在输入语言即可进行代码编写。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas</span><br></pre></td></tr></table></figure><p>今天就随手写到这里吧，以后要补充再补充。</p><p>哦，对了， 写md文件前，先在bash里面输入hexo new name，不然上传就会出现无题呜呜呜，刚刚搞了好久。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;参考：&lt;a href=&quot;https://markdown.com.cn/basic-syntax/headings.html&quot;&gt;Markdown 标题语法 | Markdown 官方教程&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;1-标题&quot;&gt;&lt;a href=&quot;#1-标题&quot; class</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>如何搭建博客1.0</title>
    <link href="http://example.com/2023/10/30/%E5%A6%82%E4%BD%95%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A21-0/"/>
    <id>http://example.com/2023/10/30/%E5%A6%82%E4%BD%95%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A21-0/</id>
    <published>2023-10-30T08:50:54.000Z</published>
    <updated>2024-09-12T08:58:40.529Z</updated>
    
    <content type="html"><![CDATA[<h1 id="如何搭建个人博客1-0"><a href="#如何搭建个人博客1-0" class="headerlink" title="如何搭建个人博客1.0"></a>如何搭建个人博客1.0</h1><p>参考教程：<a href="https://zhuanlan.zhihu.com/p/102592286">从零开始搭建个人博客（超详细） - 知乎 (zhihu.com)</a></p><h2 id="1-搭建步骤"><a href="#1-搭建步骤" class="headerlink" title="1.搭建步骤"></a>1.搭建步骤</h2><h3 id="①注册github账号"><a href="#①注册github账号" class="headerlink" title="①注册github账号"></a>①注册github账号</h3><h3 id="②安装git"><a href="#②安装git" class="headerlink" title="②安装git"></a>②安装git</h3><p>下载地址：<a href="https://git-scm.com/">Git (git-scm.com)</a></p><p>安装按照默认即可，想改路径也行。安装完成后，文件夹空白处右击打开git bash，输入git，有版本号及包的信息即表明安装成功。</p><h3 id="③连接git和github"><a href="#③连接git和github" class="headerlink" title="③连接git和github"></a>③连接git和github</h3><p>绑定github，按照作者所说的步骤即可。输入ssh命令看是否安装了，一般情况下都是安装了的，然后输入 ssh-keygen -t rsa获得密钥，然后复制进github，如果找不到文件了的话，逐步输入以下代码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd ~/.ssh</span><br><span class="line">ls</span><br><span class="line">cat id_rsa.pub</span><br></pre></td></tr></table></figure><p>进入github的主页，打开settings，找到SSH and GPG keys，粘贴密钥即可。</p><p>验证是否安装成功的话，就在git bash里面输入ssh -T <a href="mailto:git@github.com">git@github.com</a>进行检验。</p><h3 id="④新建仓库"><a href="#④新建仓库" class="headerlink" title="④新建仓库"></a>④新建仓库</h3><p>创建新的github项目，然后下载到本地，查看内容是否一致。然后创建一个text进行测试。输入git status查看仓库状态。然后添加text文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">git add text.txt//添加文件到临时缓冲区</span><br><span class="line">git commit -m &quot;text.txt&quot;//这里我和作者的不一样，不知道为啥</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">//如果是第一次提交还会出现输入名字和邮箱的问题，根据提示来即可</span><br><span class="line">git config --global user.name&quot;xxxx&quot;</span><br><span class="line">git config --global user.email&quot;xxxx@xx.com&quot;</span><br></pre></td></tr></table></figure><p>完成提交后检查仓库日志和状态</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git log</span><br><span class="line">git status</span><br></pre></td></tr></table></figure><p>然后将本地仓库的内容提交至远程仓库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push origin main//因为github20年改版了，不用master改用main了</span><br></pre></td></tr></table></figure><p>然后输入密码，上传成功，然后就可以在github上看见喽！</p><h3 id="⑤安装nodejs"><a href="#⑤安装nodejs" class="headerlink" title="⑤安装nodejs"></a>⑤安装nodejs</h3><p>下载网址<a href="https://nodejs.org/en">Node.js (nodejs.org)</a></p><p>可以一直next，只改一个路径。</p><p>安装完成后在cmd里面输入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">node -v</span><br><span class="line">npm -v</span><br></pre></td></tr></table></figure><p>查看安装是否成功，然后设置环境变量。在node.js里面新建两个空的文件夹node_cache和node_global。然后在cmd里面进行设置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm config set prefix &quot;xxx&quot;//node_global的路径</span><br><span class="line">npm config set cache &quot;xxxx&quot;//node_cache的路径</span><br></pre></td></tr></table></figure><p>然后在此电脑—&gt;属性—&gt;关于—&gt;高级系统设置—&gt;环境变量，系统变量中新建一个NODE_PATH，值为node_global的内层路径，如“D:\nodejs\node_global\node_modules”，然后编辑用户变量，在Path的npm的路径改成“D:\nodejs\node_global”</p><p>测试，cmd中输入npm install webpack -g，看看D:\nodejs\node_global\node_modules里面有没有装上。</p><h3 id="⑥安装Hexo"><a href="#⑥安装Hexo" class="headerlink" title="⑥安装Hexo"></a>⑥安装Hexo</h3><p>在github上创建仓库。仓库名称必须是“用户名.github.io”，然后在settings里面查看是否成功。我当时好像第一次没成功，然后删了新建了，然后在settings里面的pages按照提示乱点一通就可以了。</p><p>在本地上新建文件夹，储存hexo和blog。hexo是开源的，所以可以直接输入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><p>安装完成后，hexo命令输入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo init //初始化</span><br><span class="line">hexo g //静态部署</span><br><span class="line">hexo s //查看本地网页，ctrl+c停止运行</span><br></pre></td></tr></table></figure><p>然后回到本地文件夹，打开_config.yml，找到deploy，输入github仓库地址。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repository: https://github.com/fengye97/fengye97.github.io.git  </span><br><span class="line">  branch: main</span><br></pre></td></tr></table></figure><p>在本地文件夹部署插件，输入命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>最后，hexo三部曲</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean //清除缓存</span><br><span class="line">hexo g //静态部署hexo generate</span><br><span class="line">hexo d //部署到仓库hexo deploy</span><br></pre></td></tr></table></figure><p>然后在浏览器中输入 <a href="https://xxx.github.io/">https://xxx.github.io</a> 就可以打开网页了！</p><p>PS：网不好经常hexo d传不上，可以试试hexo s看看本地是不是能成功显示，如果能就是网络问题。</p><p>创建.md文件用的是hexo new xxx。</p><h3 id="完结，撒花！！！"><a href="#完结，撒花！！！" class="headerlink" title="完结，撒花！！！"></a>完结，撒花！！！</h3>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;如何搭建个人博客1-0&quot;&gt;&lt;a href=&quot;#如何搭建个人博客1-0&quot; class=&quot;headerlink&quot; title=&quot;如何搭建个人博客1.0&quot;&gt;&lt;/a&gt;如何搭建个人博客1.0&lt;/h1&gt;&lt;p&gt;参考教程：&lt;a href=&quot;https://zhuanlan.zhi</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://example.com/2023/10/21/hello-world/"/>
    <id>http://example.com/2023/10/21/hello-world/</id>
    <published>2023-10-21T04:49:01.546Z</published>
    <updated>2023-10-21T04:49:01.546Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>
